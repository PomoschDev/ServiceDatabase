// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.1
// source: DatabaseService/DatabaseService.proto

package DatabaseServicev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{0}
}

type HTTPCodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *HTTPCodes) Reset() {
	*x = HTTPCodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPCodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPCodes) ProtoMessage() {}

func (x *HTTPCodes) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPCodes.ProtoReflect.Descriptor instead.
func (*HTTPCodes) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{1}
}

func (x *HTTPCodes) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

type AddCardToUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card *CreateCardRequest `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *AddCardToUserRequest) Reset() {
	*x = AddCardToUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCardToUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCardToUserRequest) ProtoMessage() {}

func (x *AddCardToUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCardToUserRequest.ProtoReflect.Descriptor instead.
func (*AddCardToUserRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{2}
}

func (x *AddCardToUserRequest) GetCard() *CreateCardRequest {
	if x != nil {
		return x.Card
	}
	return nil
}

type AddCardToUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //ID записи в таблице
	Email     string     `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Username  string     `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password  string     `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Phone     string     `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Card      []*Card    `protobuf:"bytes,6,rep,name=card,proto3" json:"card,omitempty"`
	Role      string     `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`
	Company   *Company   `protobuf:"bytes,8,opt,name=company,proto3" json:"company,omitempty"`
	Type      uint64     `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Donations *Donations `protobuf:"bytes,10,opt,name=donations,proto3" json:"donations,omitempty"`
	CreatedAt string     `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string     `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *AddCardToUserResponse) Reset() {
	*x = AddCardToUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCardToUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCardToUserResponse) ProtoMessage() {}

func (x *AddCardToUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCardToUserResponse.ProtoReflect.Descriptor instead.
func (*AddCardToUserResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{3}
}

func (x *AddCardToUserResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddCardToUserResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddCardToUserResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddCardToUserResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddCardToUserResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AddCardToUserResponse) GetCard() []*Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *AddCardToUserResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AddCardToUserResponse) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *AddCardToUserResponse) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AddCardToUserResponse) GetDonations() *Donations {
	if x != nil {
		return x.Donations
	}
	return nil
}

func (x *AddCardToUserResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AddCardToUserResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateDonationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string     `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Amount    float32    `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Wards     []*Ward    `protobuf:"bytes,4,rep,name=wards,proto3" json:"wards,omitempty"`
	UserId    uint64     `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`
	CreatedAt string     `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *anypb.Any `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateDonationsResponse) Reset() {
	*x = CreateDonationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDonationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDonationsResponse) ProtoMessage() {}

func (x *CreateDonationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDonationsResponse.ProtoReflect.Descriptor instead.
func (*CreateDonationsResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDonationsResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateDonationsResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateDonationsResponse) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateDonationsResponse) GetWards() []*Ward {
	if x != nil {
		return x.Wards
	}
	return nil
}

func (x *CreateDonationsResponse) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateDonationsResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateDonationsResponse) GetUpdatedAt() *anypb.Any {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DeleteWardByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteWardByIdRequest) Reset() {
	*x = DeleteWardByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWardByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWardByIdRequest) ProtoMessage() {}

func (x *DeleteWardByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWardByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteWardByIdRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteWardByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindWardByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindWardByIdRequest) Reset() {
	*x = FindWardByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindWardByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindWardByIdRequest) ProtoMessage() {}

func (x *FindWardByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindWardByIdRequest.ProtoReflect.Descriptor instead.
func (*FindWardByIdRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{6}
}

func (x *FindWardByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateWardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	FullName   string `protobuf:"bytes,3,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Want       string `protobuf:"bytes,4,opt,name=want,proto3" json:"want,omitempty"`
	Necessary  string `protobuf:"bytes,5,opt,name=necessary,proto3" json:"necessary,omitempty"`
	DonationId uint64 `protobuf:"varint,6,opt,name=donationId,proto3" json:"donationId,omitempty"`
}

func (x *CreateWardRequest) Reset() {
	*x = CreateWardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWardRequest) ProtoMessage() {}

func (x *CreateWardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWardRequest.ProtoReflect.Descriptor instead.
func (*CreateWardRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{7}
}

func (x *CreateWardRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateWardRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CreateWardRequest) GetWant() string {
	if x != nil {
		return x.Want
	}
	return ""
}

func (x *CreateWardRequest) GetNecessary() string {
	if x != nil {
		return x.Necessary
	}
	return ""
}

func (x *CreateWardRequest) GetDonationId() uint64 {
	if x != nil {
		return x.DonationId
	}
	return 0
}

type WardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wards []*Ward `protobuf:"bytes,1,rep,name=wards,proto3" json:"wards,omitempty"`
}

func (x *WardsResponse) Reset() {
	*x = WardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WardsResponse) ProtoMessage() {}

func (x *WardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WardsResponse.ProtoReflect.Descriptor instead.
func (*WardsResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{8}
}

func (x *WardsResponse) GetWards() []*Ward {
	if x != nil {
		return x.Wards
	}
	return nil
}

type DeleteDonationByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDonationByIdRequest) Reset() {
	*x = DeleteDonationByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDonationByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDonationByIdRequest) ProtoMessage() {}

func (x *DeleteDonationByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDonationByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteDonationByIdRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteDonationByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindDonationByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindDonationByIdRequest) Reset() {
	*x = FindDonationByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDonationByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDonationByIdRequest) ProtoMessage() {}

func (x *FindDonationByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDonationByIdRequest.ProtoReflect.Descriptor instead.
func (*FindDonationByIdRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{10}
}

func (x *FindDonationByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindDonationWardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wards []*Ward `protobuf:"bytes,1,rep,name=wards,proto3" json:"wards,omitempty"`
}

func (x *FindDonationWardsResponse) Reset() {
	*x = FindDonationWardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDonationWardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDonationWardsResponse) ProtoMessage() {}

func (x *FindDonationWardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDonationWardsResponse.ProtoReflect.Descriptor instead.
func (*FindDonationWardsResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{11}
}

func (x *FindDonationWardsResponse) GetWards() []*Ward {
	if x != nil {
		return x.Wards
	}
	return nil
}

type FindDonationWardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindDonationWardsRequest) Reset() {
	*x = FindDonationWardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDonationWardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDonationWardsRequest) ProtoMessage() {}

func (x *FindDonationWardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDonationWardsRequest.ProtoReflect.Descriptor instead.
func (*FindDonationWardsRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{12}
}

func (x *FindDonationWardsRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateDonationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Amount float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Wards  []*Ward `protobuf:"bytes,3,rep,name=wards,proto3" json:"wards,omitempty"`
	UserId uint64  `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CreateDonationsRequest) Reset() {
	*x = CreateDonationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDonationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDonationsRequest) ProtoMessage() {}

func (x *CreateDonationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDonationsRequest.ProtoReflect.Descriptor instead.
func (*CreateDonationsRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{13}
}

func (x *CreateDonationsRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateDonationsRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateDonationsRequest) GetWards() []*Ward {
	if x != nil {
		return x.Wards
	}
	return nil
}

func (x *CreateDonationsRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DonationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Donations []*Donations `protobuf:"bytes,1,rep,name=donations,proto3" json:"donations,omitempty"`
}

func (x *DonationsResponse) Reset() {
	*x = DonationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DonationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DonationsResponse) ProtoMessage() {}

func (x *DonationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DonationsResponse.ProtoReflect.Descriptor instead.
func (*DonationsResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{14}
}

func (x *DonationsResponse) GetDonations() []*Donations {
	if x != nil {
		return x.Donations
	}
	return nil
}

type DeleteCardCompanyByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCardCompanyByIdRequest) Reset() {
	*x = DeleteCardCompanyByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCardCompanyByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCardCompanyByIdRequest) ProtoMessage() {}

func (x *DeleteCardCompanyByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCardCompanyByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteCardCompanyByIdRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteCardCompanyByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindCardCompanyByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindCardCompanyByIDRequest) Reset() {
	*x = FindCardCompanyByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCardCompanyByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCardCompanyByIDRequest) ProtoMessage() {}

func (x *FindCardCompanyByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCardCompanyByIDRequest.ProtoReflect.Descriptor instead.
func (*FindCardCompanyByIDRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{16}
}

func (x *FindCardCompanyByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateCardCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName  string `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Number    string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	Date      string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Cvv       string `protobuf:"bytes,5,opt,name=cvv,proto3" json:"cvv,omitempty"`
	CompanyId uint64 `protobuf:"varint,6,opt,name=companyId,proto3" json:"companyId,omitempty"`
}

func (x *CreateCardCompanyRequest) Reset() {
	*x = CreateCardCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCardCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCardCompanyRequest) ProtoMessage() {}

func (x *CreateCardCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCardCompanyRequest.ProtoReflect.Descriptor instead.
func (*CreateCardCompanyRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{17}
}

func (x *CreateCardCompanyRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CreateCardCompanyRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *CreateCardCompanyRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CreateCardCompanyRequest) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

func (x *CreateCardCompanyRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type CardsCompaniesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*CardCompany `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *CardsCompaniesResponse) Reset() {
	*x = CardsCompaniesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardsCompaniesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardsCompaniesResponse) ProtoMessage() {}

func (x *CardsCompaniesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardsCompaniesResponse.ProtoReflect.Descriptor instead.
func (*CardsCompaniesResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{18}
}

func (x *CardsCompaniesResponse) GetCards() []*CardCompany {
	if x != nil {
		return x.Cards
	}
	return nil
}

type DeleteCardByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCardByIdRequest) Reset() {
	*x = DeleteCardByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCardByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCardByIdRequest) ProtoMessage() {}

func (x *DeleteCardByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCardByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteCardByIdRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteCardByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindCardByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindCardByIdRequest) Reset() {
	*x = FindCardByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCardByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCardByIdRequest) ProtoMessage() {}

func (x *FindCardByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCardByIdRequest.ProtoReflect.Descriptor instead.
func (*FindCardByIdRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{20}
}

func (x *FindCardByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName string `protobuf:"bytes,1,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Number   string `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	Date     string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Cvv      string `protobuf:"bytes,4,opt,name=cvv,proto3" json:"cvv,omitempty"`
	UserId   string `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CreateCardRequest) Reset() {
	*x = CreateCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCardRequest) ProtoMessage() {}

func (x *CreateCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCardRequest.ProtoReflect.Descriptor instead.
func (*CreateCardRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{21}
}

func (x *CreateCardRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CreateCardRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *CreateCardRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CreateCardRequest) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

func (x *CreateCardRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *CardsResponse) Reset() {
	*x = CardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardsResponse) ProtoMessage() {}

func (x *CardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardsResponse.ProtoReflect.Descriptor instead.
func (*CardsResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{22}
}

func (x *CardsResponse) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type UpdateCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *UpdateCompanyRequest) Reset() {
	*x = UpdateCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyRequest) ProtoMessage() {}

func (x *UpdateCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCompanyRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateCompanyRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

type DeleteCompanyByModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *DeleteCompanyByModelRequest) Reset() {
	*x = DeleteCompanyByModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompanyByModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyByModelRequest) ProtoMessage() {}

func (x *DeleteCompanyByModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyByModelRequest.ProtoReflect.Descriptor instead.
func (*DeleteCompanyByModelRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteCompanyByModelRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

type DeleteCompanyByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCompanyByIdRequest) Reset() {
	*x = DeleteCompanyByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompanyByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyByIdRequest) ProtoMessage() {}

func (x *DeleteCompanyByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteCompanyByIdRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteCompanyByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindCompanyCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindCompanyCardRequest) Reset() {
	*x = FindCompanyCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCompanyCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCompanyCardRequest) ProtoMessage() {}

func (x *FindCompanyCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCompanyCardRequest.ProtoReflect.Descriptor instead.
func (*FindCompanyCardRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{26}
}

func (x *FindCompanyCardRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindCompanyByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindCompanyByIdRequest) Reset() {
	*x = FindCompanyByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCompanyByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCompanyByIdRequest) ProtoMessage() {}

func (x *FindCompanyByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCompanyByIdRequest.ProtoReflect.Descriptor instead.
func (*FindCompanyByIdRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{27}
}

func (x *FindCompanyByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindCompanyByIdPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *FindCompanyByIdPhoneRequest) Reset() {
	*x = FindCompanyByIdPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCompanyByIdPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCompanyByIdPhoneRequest) ProtoMessage() {}

func (x *FindCompanyByIdPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCompanyByIdPhoneRequest.ProtoReflect.Descriptor instead.
func (*FindCompanyByIdPhoneRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{28}
}

func (x *FindCompanyByIdPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type CreateCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Phone   string       `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Address string       `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Site    string       `protobuf:"bytes,5,opt,name=site,proto3" json:"site,omitempty"`
	Inn     string       `protobuf:"bytes,6,opt,name=inn,proto3" json:"inn,omitempty"`
	Kpp     string       `protobuf:"bytes,7,opt,name=kpp,proto3" json:"kpp,omitempty"`
	Okpo    string       `protobuf:"bytes,8,opt,name=okpo,proto3" json:"okpo,omitempty"`
	UserId  uint64       `protobuf:"varint,9,opt,name=userId,proto3" json:"userId,omitempty"`
	Card    *CardCompany `protobuf:"bytes,10,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *CreateCompanyRequest) Reset() {
	*x = CreateCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyRequest) ProtoMessage() {}

func (x *CreateCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyRequest.ProtoReflect.Descriptor instead.
func (*CreateCompanyRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{29}
}

func (x *CreateCompanyRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateCompanyRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateCompanyRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateCompanyRequest) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *CreateCompanyRequest) GetInn() string {
	if x != nil {
		return x.Inn
	}
	return ""
}

func (x *CreateCompanyRequest) GetKpp() string {
	if x != nil {
		return x.Kpp
	}
	return ""
}

func (x *CreateCompanyRequest) GetOkpo() string {
	if x != nil {
		return x.Okpo
	}
	return ""
}

func (x *CreateCompanyRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateCompanyRequest) GetCard() *CardCompany {
	if x != nil {
		return x.Card
	}
	return nil
}

type CompaniesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Companies []*Company `protobuf:"bytes,1,rep,name=companies,proto3" json:"companies,omitempty"`
}

func (x *CompaniesResponse) Reset() {
	*x = CompaniesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompaniesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompaniesResponse) ProtoMessage() {}

func (x *CompaniesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompaniesResponse.ProtoReflect.Descriptor instead.
func (*CompaniesResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{30}
}

func (x *CompaniesResponse) GetCompanies() []*Company {
	if x != nil {
		return x.Companies
	}
	return nil
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //ID записи в таблице
	Email     string     `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Username  string     `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password  string     `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Phone     string     `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Card      []*Card    `protobuf:"bytes,6,rep,name=card,proto3" json:"card,omitempty"`
	Role      string     `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`
	Company   *Company   `protobuf:"bytes,8,opt,name=company,proto3" json:"company,omitempty"`
	Type      uint64     `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Donations *Donations `protobuf:"bytes,10,opt,name=donations,proto3" json:"donations,omitempty"`
	CreatedAt string     `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string     `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateUserRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateUserRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateUserRequest) GetCard() []*Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *UpdateUserRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UpdateUserRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *UpdateUserRequest) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateUserRequest) GetDonations() *Donations {
	if x != nil {
		return x.Donations
	}
	return nil
}

func (x *UpdateUserRequest) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UpdateUserRequest) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type DeleteUserByModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *CreateUserResponse `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *DeleteUserByModelRequest) Reset() {
	*x = DeleteUserByModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserByModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserByModelRequest) ProtoMessage() {}

func (x *DeleteUserByModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserByModelRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserByModelRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteUserByModelRequest) GetUser() *CreateUserResponse {
	if x != nil {
		return x.User
	}
	return nil
}

type DeleteUserByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserByIdRequest) Reset() {
	*x = DeleteUserByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserByIdRequest) ProtoMessage() {}

func (x *DeleteUserByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserByIdRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteUserByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindUserCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindUserCardRequest) Reset() {
	*x = FindUserCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserCardRequest) ProtoMessage() {}

func (x *FindUserCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserCardRequest.ProtoReflect.Descriptor instead.
func (*FindUserCardRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{34}
}

func (x *FindUserCardRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindUserCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *FindUserCardResponse) Reset() {
	*x = FindUserCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserCardResponse) ProtoMessage() {}

func (x *FindUserCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserCardResponse.ProtoReflect.Descriptor instead.
func (*FindUserCardResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{35}
}

func (x *FindUserCardResponse) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type ChangeUserTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type uint64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ChangeUserTypeRequest) Reset() {
	*x = ChangeUserTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeUserTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserTypeRequest) ProtoMessage() {}

func (x *ChangeUserTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserTypeRequest.ProtoReflect.Descriptor instead.
func (*ChangeUserTypeRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{36}
}

func (x *ChangeUserTypeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChangeUserTypeRequest) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ChangeUserTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accessory bool `protobuf:"varint,1,opt,name=accessory,proto3" json:"accessory,omitempty"`
}

func (x *ChangeUserTypeResponse) Reset() {
	*x = ChangeUserTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeUserTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserTypeResponse) ProtoMessage() {}

func (x *ChangeUserTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserTypeResponse.ProtoReflect.Descriptor instead.
func (*ChangeUserTypeResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{37}
}

func (x *ChangeUserTypeResponse) GetAccessory() bool {
	if x != nil {
		return x.Accessory
	}
	return false
}

type FindUserByPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *FindUserByPhoneRequest) Reset() {
	*x = FindUserByPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByPhoneRequest) ProtoMessage() {}

func (x *FindUserByPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByPhoneRequest.ProtoReflect.Descriptor instead.
func (*FindUserByPhoneRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{38}
}

func (x *FindUserByPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type FindUserByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindUserByIdRequest) Reset() {
	*x = FindUserByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByIdRequest) ProtoMessage() {}

func (x *FindUserByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByIdRequest.ProtoReflect.Descriptor instead.
func (*FindUserByIdRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{39}
}

func (x *FindUserByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindUserDonationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindUserDonationsRequest) Reset() {
	*x = FindUserDonationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserDonationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserDonationsRequest) ProtoMessage() {}

func (x *FindUserDonationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserDonationsRequest.ProtoReflect.Descriptor instead.
func (*FindUserDonationsRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{40}
}

func (x *FindUserDonationsRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindUserDonationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Donations []*Donations `protobuf:"bytes,1,rep,name=donations,proto3" json:"donations,omitempty"`
}

func (x *FindUserDonationsResponse) Reset() {
	*x = FindUserDonationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserDonationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserDonationsResponse) ProtoMessage() {}

func (x *FindUserDonationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserDonationsResponse.ProtoReflect.Descriptor instead.
func (*FindUserDonationsResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{41}
}

func (x *FindUserDonationsResponse) GetDonations() []*Donations {
	if x != nil {
		return x.Donations
	}
	return nil
}

type FindUserByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *FindUserByEmailRequest) Reset() {
	*x = FindUserByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByEmailRequest) ProtoMessage() {}

func (x *FindUserByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByEmailRequest.ProtoReflect.Descriptor instead.
func (*FindUserByEmailRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{42}
}

func (x *FindUserByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*CreateUserResponse `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UsersResponse) Reset() {
	*x = UsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersResponse) ProtoMessage() {}

func (x *UsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersResponse.ProtoReflect.Descriptor instead.
func (*UsersResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{43}
}

func (x *UsersResponse) GetUsers() []*CreateUserResponse {
	if x != nil {
		return x.Users
	}
	return nil
}

// UserIsExists
type UserIsExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *UserIsExistsRequest) Reset() {
	*x = UserIsExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIsExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIsExistsRequest) ProtoMessage() {}

func (x *UserIsExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIsExistsRequest.ProtoReflect.Descriptor instead.
func (*UserIsExistsRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{44}
}

func (x *UserIsExistsRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type UserIsExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExists bool `protobuf:"varint,1,opt,name=isExists,proto3" json:"isExists,omitempty"`
}

func (x *UserIsExistsResponse) Reset() {
	*x = UserIsExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIsExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIsExistsResponse) ProtoMessage() {}

func (x *UserIsExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIsExistsResponse.ProtoReflect.Descriptor instead.
func (*UserIsExistsResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{45}
}

func (x *UserIsExistsResponse) GetIsExists() bool {
	if x != nil {
		return x.IsExists
	}
	return false
}

// ComparePassword
type ComparePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone    string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ComparePasswordRequest) Reset() {
	*x = ComparePasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComparePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComparePasswordRequest) ProtoMessage() {}

func (x *ComparePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComparePasswordRequest.ProtoReflect.Descriptor instead.
func (*ComparePasswordRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{46}
}

func (x *ComparePasswordRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ComparePasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ComparePasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accessory bool `protobuf:"varint,1,opt,name=accessory,proto3" json:"accessory,omitempty"`
}

func (x *ComparePasswordResponse) Reset() {
	*x = ComparePasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComparePasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComparePasswordResponse) ProtoMessage() {}

func (x *ComparePasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComparePasswordResponse.ProtoReflect.Descriptor instead.
func (*ComparePasswordResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{47}
}

func (x *ComparePasswordResponse) GetAccessory() bool {
	if x != nil {
		return x.Accessory
	}
	return false
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Phone     string       `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Address   string       `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Site      string       `protobuf:"bytes,5,opt,name=site,proto3" json:"site,omitempty"`
	Inn       string       `protobuf:"bytes,6,opt,name=inn,proto3" json:"inn,omitempty"`
	Kpp       string       `protobuf:"bytes,7,opt,name=kpp,proto3" json:"kpp,omitempty"`
	Okpo      string       `protobuf:"bytes,8,opt,name=okpo,proto3" json:"okpo,omitempty"`
	Card      *CardCompany `protobuf:"bytes,9,opt,name=card,proto3" json:"card,omitempty"`
	UserId    uint64       `protobuf:"varint,10,opt,name=userId,proto3" json:"userId,omitempty"`
	CreatedAt string       `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string       `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{48}
}

func (x *Company) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Company) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Company) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Company) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Company) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *Company) GetInn() string {
	if x != nil {
		return x.Inn
	}
	return ""
}

func (x *Company) GetKpp() string {
	if x != nil {
		return x.Kpp
	}
	return ""
}

func (x *Company) GetOkpo() string {
	if x != nil {
		return x.Okpo
	}
	return ""
}

func (x *Company) GetCard() *CardCompany {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *Company) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Company) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Company) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CardCompany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName  string `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Number    string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	Date      string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Cvv       uint64 `protobuf:"varint,5,opt,name=cvv,proto3" json:"cvv,omitempty"`
	CompanyId uint64 `protobuf:"varint,6,opt,name=companyId,proto3" json:"companyId,omitempty"`
	CreatedAt string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CardCompany) Reset() {
	*x = CardCompany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardCompany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardCompany) ProtoMessage() {}

func (x *CardCompany) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardCompany.ProtoReflect.Descriptor instead.
func (*CardCompany) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{49}
}

func (x *CardCompany) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardCompany) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CardCompany) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *CardCompany) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CardCompany) GetCvv() uint64 {
	if x != nil {
		return x.Cvv
	}
	return 0
}

func (x *CardCompany) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CardCompany) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CardCompany) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName  string `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Number    string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	Date      string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Cvv       uint64 `protobuf:"varint,5,opt,name=cvv,proto3" json:"cvv,omitempty"`
	UserId    uint64 `protobuf:"varint,6,opt,name=userId,proto3" json:"userId,omitempty"`
	CreatedAt string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{50}
}

func (x *Card) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Card) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Card) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Card) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Card) GetCvv() uint64 {
	if x != nil {
		return x.Cvv
	}
	return 0
}

func (x *Card) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Card) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Card) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Ward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	FullName   string `protobuf:"bytes,3,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Want       string `protobuf:"bytes,4,opt,name=want,proto3" json:"want,omitempty"`
	Necessary  string `protobuf:"bytes,5,opt,name=necessary,proto3" json:"necessary,omitempty"`
	DonationId uint64 `protobuf:"varint,6,opt,name=donationId,proto3" json:"donationId,omitempty"`
	CreatedAt  string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  string `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Ward) Reset() {
	*x = Ward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ward) ProtoMessage() {}

func (x *Ward) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ward.ProtoReflect.Descriptor instead.
func (*Ward) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{51}
}

func (x *Ward) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ward) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Ward) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Ward) GetWant() string {
	if x != nil {
		return x.Want
	}
	return ""
}

func (x *Ward) GetNecessary() string {
	if x != nil {
		return x.Necessary
	}
	return ""
}

func (x *Ward) GetDonationId() uint64 {
	if x != nil {
		return x.DonationId
	}
	return 0
}

func (x *Ward) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Ward) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Donations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Amount    float32 `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Wards     []*Ward `protobuf:"bytes,4,rep,name=wards,proto3" json:"wards,omitempty"`
	UserId    uint64  `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`
	CreatedAt string  `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string  `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Donations) Reset() {
	*x = Donations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Donations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Donations) ProtoMessage() {}

func (x *Donations) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Donations.ProtoReflect.Descriptor instead.
func (*Donations) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{52}
}

func (x *Donations) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Donations) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Donations) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Donations) GetWards() []*Ward {
	if x != nil {
		return x.Wards
	}
	return nil
}

func (x *Donations) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Donations) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Donations) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string     `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Username  string     `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password  string     `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Phone     string     `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Card      []*Card    `protobuf:"bytes,5,rep,name=card,proto3" json:"card,omitempty"`
	Role      string     `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	Company   *Company   `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
	Type      uint64     `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	Donations *Donations `protobuf:"bytes,9,opt,name=donations,proto3" json:"donations,omitempty"`
	CreatedAt string     `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string     `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{53}
}

func (x *CreateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateUserRequest) GetCard() []*Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *CreateUserRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreateUserRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *CreateUserRequest) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateUserRequest) GetDonations() *Donations {
	if x != nil {
		return x.Donations
	}
	return nil
}

func (x *CreateUserRequest) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateUserRequest) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //ID записи в таблице
	Email     string     `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Username  string     `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password  string     `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Phone     string     `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Card      []*Card    `protobuf:"bytes,6,rep,name=card,proto3" json:"card,omitempty"`
	Role      string     `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`
	Company   *Company   `protobuf:"bytes,8,opt,name=company,proto3" json:"company,omitempty"`
	Type      uint64     `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Donations *Donations `protobuf:"bytes,10,opt,name=donations,proto3" json:"donations,omitempty"`
	CreatedAt string     `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string     `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{54}
}

func (x *CreateUserResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateUserResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateUserResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateUserResponse) GetCard() []*Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *CreateUserResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreateUserResponse) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *CreateUserResponse) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateUserResponse) GetDonations() *Donations {
	if x != nil {
		return x.Donations
	}
	return nil
}

func (x *CreateUserResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateUserResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// IsRole
type IsRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    //ID юзера
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"` //Роль к которой проверяем принадлежность
}

func (x *IsRoleRequest) Reset() {
	*x = IsRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsRoleRequest) ProtoMessage() {}

func (x *IsRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsRoleRequest.ProtoReflect.Descriptor instead.
func (*IsRoleRequest) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{55}
}

func (x *IsRoleRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IsRoleRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type IsRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accessory bool `protobuf:"varint,1,opt,name=accessory,proto3" json:"accessory,omitempty"` //ID записи в таблице
}

func (x *IsRoleResponse) Reset() {
	*x = IsRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DatabaseService_DatabaseService_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsRoleResponse) ProtoMessage() {}

func (x *IsRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DatabaseService_DatabaseService_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsRoleResponse.ProtoReflect.Descriptor instead.
func (*IsRoleResponse) Descriptor() ([]byte, []int) {
	return file_DatabaseService_DatabaseService_proto_rawDescGZIP(), []int{56}
}

func (x *IsRoleResponse) GetAccessory() bool {
	if x != nil {
		return x.Accessory
	}
	return false
}

var File_DatabaseService_DatabaseService_proto protoreflect.FileDescriptor

var file_DatabaseService_DatabaseService_proto_rawDesc = []byte{
	0x0a, 0x25, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0x0a, 0x09, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x46, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x22, 0xf0, 0x02,
	0x0a, 0x15, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xe6, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x52, 0x05, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x57, 0x61, 0x72, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x77, 0x61, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x63, 0x65, 0x73, 0x73, 0x61,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x63, 0x65, 0x73, 0x73,
	0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x0d, 0x57, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x61,
	0x72, 0x64, 0x52, 0x05, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x40, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x05, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x52, 0x05, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x83, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x52, 0x05, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2e, 0x0a, 0x1c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x1a,
	0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x76, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x76,
	0x76, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22,
	0x44, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x64, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x05,
	0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25,
	0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x76, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x76, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a,
	0x0d, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x42, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x49, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28,
	0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x33, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x42, 0x79, 0x49, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6e, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x70, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x70, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6f, 0x6b, 0x70, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x6b,
	0x70, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x04,
	0x63, 0x61, 0x72, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x22, 0xec, 0x02, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4b, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25,
	0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x22, 0x3b, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x36, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x22, 0x2e, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a,
	0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x19, 0x46, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09,
	0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2e, 0x0a, 0x16, 0x46, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x42, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x2b, 0x0a,
	0x13, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x32, 0x0a, 0x14, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x4a,
	0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x37, 0x0a, 0x17, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x79, 0x22, 0xa9, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6e, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x70, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x70, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x6f, 0x6b, 0x70, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x6b, 0x70,
	0x6f, 0x12, 0x28, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xd1, 0x01, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x76, 0x76, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x76, 0x76, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x76, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x63, 0x76, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x04, 0x57,
	0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x61, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x63,
	0x65, 0x73, 0x73, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65,
	0x63, 0x65, 0x73, 0x73, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x6f, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xc2, 0x01, 0x0a, 0x09, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x05, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x52, 0x05, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdc, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x6f, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xed, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x6f, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x33, 0x0a, 0x0d, 0x49, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x2e, 0x0a, 0x0e,
	0x49, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x32, 0x8b, 0x1b, 0x0a,
	0x0f, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x45, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x49, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x5a, 0x0a, 0x11, 0x46, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x44,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x44, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x4c, 0x0a, 0x12,
	0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x64, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x48, 0x0a, 0x0f, 0x46, 0x69,
	0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x50, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x24, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x54, 0x54,
	0x50, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x54, 0x54,
	0x50, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x3b, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x36, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x54, 0x54, 0x50,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x1a, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x50, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x44, 0x0a, 0x18, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x1a, 0x12, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x52, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x1a,
	0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x37, 0x0a, 0x09, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x72, 0x64, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x54, 0x54,
	0x50, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x57, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57,
	0x61, 0x72, 0x64, 0x12, 0x3b, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x57, 0x61, 0x72, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x57, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x64,
	0x12, 0x36, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x42, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x57, 0x61, 0x72, 0x64, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48,
	0x54, 0x54, 0x50, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x12, 0x0d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x1a, 0x0d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x2f, 0x5a, 0x2d, 0x63, 0x6f,
	0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x3b, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_DatabaseService_DatabaseService_proto_rawDescOnce sync.Once
	file_DatabaseService_DatabaseService_proto_rawDescData = file_DatabaseService_DatabaseService_proto_rawDesc
)

func file_DatabaseService_DatabaseService_proto_rawDescGZIP() []byte {
	file_DatabaseService_DatabaseService_proto_rawDescOnce.Do(func() {
		file_DatabaseService_DatabaseService_proto_rawDescData = protoimpl.X.CompressGZIP(file_DatabaseService_DatabaseService_proto_rawDescData)
	})
	return file_DatabaseService_DatabaseService_proto_rawDescData
}

var file_DatabaseService_DatabaseService_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_DatabaseService_DatabaseService_proto_goTypes = []any{
	(*Empty)(nil),                        // 0: service.Empty
	(*HTTPCodes)(nil),                    // 1: service.HTTPCodes
	(*AddCardToUserRequest)(nil),         // 2: service.AddCardToUserRequest
	(*AddCardToUserResponse)(nil),        // 3: service.AddCardToUserResponse
	(*CreateDonationsResponse)(nil),      // 4: service.CreateDonationsResponse
	(*DeleteWardByIdRequest)(nil),        // 5: service.DeleteWardByIdRequest
	(*FindWardByIdRequest)(nil),          // 6: service.FindWardByIdRequest
	(*CreateWardRequest)(nil),            // 7: service.CreateWardRequest
	(*WardsResponse)(nil),                // 8: service.WardsResponse
	(*DeleteDonationByIdRequest)(nil),    // 9: service.DeleteDonationByIdRequest
	(*FindDonationByIdRequest)(nil),      // 10: service.FindDonationByIdRequest
	(*FindDonationWardsResponse)(nil),    // 11: service.FindDonationWardsResponse
	(*FindDonationWardsRequest)(nil),     // 12: service.FindDonationWardsRequest
	(*CreateDonationsRequest)(nil),       // 13: service.CreateDonationsRequest
	(*DonationsResponse)(nil),            // 14: service.DonationsResponse
	(*DeleteCardCompanyByIdRequest)(nil), // 15: service.DeleteCardCompanyByIdRequest
	(*FindCardCompanyByIDRequest)(nil),   // 16: service.FindCardCompanyByIDRequest
	(*CreateCardCompanyRequest)(nil),     // 17: service.CreateCardCompanyRequest
	(*CardsCompaniesResponse)(nil),       // 18: service.CardsCompaniesResponse
	(*DeleteCardByIdRequest)(nil),        // 19: service.DeleteCardByIdRequest
	(*FindCardByIdRequest)(nil),          // 20: service.FindCardByIdRequest
	(*CreateCardRequest)(nil),            // 21: service.CreateCardRequest
	(*CardsResponse)(nil),                // 22: service.CardsResponse
	(*UpdateCompanyRequest)(nil),         // 23: service.UpdateCompanyRequest
	(*DeleteCompanyByModelRequest)(nil),  // 24: service.DeleteCompanyByModelRequest
	(*DeleteCompanyByIdRequest)(nil),     // 25: service.DeleteCompanyByIdRequest
	(*FindCompanyCardRequest)(nil),       // 26: service.FindCompanyCardRequest
	(*FindCompanyByIdRequest)(nil),       // 27: service.FindCompanyByIdRequest
	(*FindCompanyByIdPhoneRequest)(nil),  // 28: service.FindCompanyByIdPhoneRequest
	(*CreateCompanyRequest)(nil),         // 29: service.CreateCompanyRequest
	(*CompaniesResponse)(nil),            // 30: service.CompaniesResponse
	(*UpdateUserRequest)(nil),            // 31: service.UpdateUserRequest
	(*DeleteUserByModelRequest)(nil),     // 32: service.DeleteUserByModelRequest
	(*DeleteUserByIdRequest)(nil),        // 33: service.DeleteUserByIdRequest
	(*FindUserCardRequest)(nil),          // 34: service.FindUserCardRequest
	(*FindUserCardResponse)(nil),         // 35: service.FindUserCardResponse
	(*ChangeUserTypeRequest)(nil),        // 36: service.ChangeUserTypeRequest
	(*ChangeUserTypeResponse)(nil),       // 37: service.ChangeUserTypeResponse
	(*FindUserByPhoneRequest)(nil),       // 38: service.FindUserByPhoneRequest
	(*FindUserByIdRequest)(nil),          // 39: service.FindUserByIdRequest
	(*FindUserDonationsRequest)(nil),     // 40: service.FindUserDonationsRequest
	(*FindUserDonationsResponse)(nil),    // 41: service.FindUserDonationsResponse
	(*FindUserByEmailRequest)(nil),       // 42: service.FindUserByEmailRequest
	(*UsersResponse)(nil),                // 43: service.UsersResponse
	(*UserIsExistsRequest)(nil),          // 44: service.UserIsExistsRequest
	(*UserIsExistsResponse)(nil),         // 45: service.UserIsExistsResponse
	(*ComparePasswordRequest)(nil),       // 46: service.ComparePasswordRequest
	(*ComparePasswordResponse)(nil),      // 47: service.ComparePasswordResponse
	(*Company)(nil),                      // 48: service.Company
	(*CardCompany)(nil),                  // 49: service.CardCompany
	(*Card)(nil),                         // 50: service.Card
	(*Ward)(nil),                         // 51: service.Ward
	(*Donations)(nil),                    // 52: service.Donations
	(*CreateUserRequest)(nil),            // 53: service.CreateUserRequest
	(*CreateUserResponse)(nil),           // 54: service.CreateUserResponse
	(*IsRoleRequest)(nil),                // 55: service.IsRoleRequest
	(*IsRoleResponse)(nil),               // 56: service.IsRoleResponse
	(*anypb.Any)(nil),                    // 57: google.protobuf.Any
}
var file_DatabaseService_DatabaseService_proto_depIdxs = []int32{
	21, // 0: service.AddCardToUserRequest.card:type_name -> service.CreateCardRequest
	50, // 1: service.AddCardToUserResponse.card:type_name -> service.Card
	48, // 2: service.AddCardToUserResponse.company:type_name -> service.Company
	52, // 3: service.AddCardToUserResponse.donations:type_name -> service.Donations
	51, // 4: service.CreateDonationsResponse.wards:type_name -> service.Ward
	57, // 5: service.CreateDonationsResponse.updatedAt:type_name -> google.protobuf.Any
	51, // 6: service.WardsResponse.wards:type_name -> service.Ward
	51, // 7: service.FindDonationWardsResponse.wards:type_name -> service.Ward
	51, // 8: service.CreateDonationsRequest.wards:type_name -> service.Ward
	52, // 9: service.DonationsResponse.donations:type_name -> service.Donations
	49, // 10: service.CardsCompaniesResponse.cards:type_name -> service.CardCompany
	50, // 11: service.CardsResponse.cards:type_name -> service.Card
	48, // 12: service.UpdateCompanyRequest.company:type_name -> service.Company
	48, // 13: service.DeleteCompanyByModelRequest.company:type_name -> service.Company
	49, // 14: service.CreateCompanyRequest.card:type_name -> service.CardCompany
	48, // 15: service.CompaniesResponse.companies:type_name -> service.Company
	50, // 16: service.UpdateUserRequest.card:type_name -> service.Card
	48, // 17: service.UpdateUserRequest.company:type_name -> service.Company
	52, // 18: service.UpdateUserRequest.donations:type_name -> service.Donations
	54, // 19: service.DeleteUserByModelRequest.user:type_name -> service.CreateUserResponse
	50, // 20: service.FindUserCardResponse.cards:type_name -> service.Card
	52, // 21: service.FindUserDonationsResponse.donations:type_name -> service.Donations
	54, // 22: service.UsersResponse.users:type_name -> service.CreateUserResponse
	49, // 23: service.Company.card:type_name -> service.CardCompany
	51, // 24: service.Donations.wards:type_name -> service.Ward
	50, // 25: service.CreateUserRequest.card:type_name -> service.Card
	48, // 26: service.CreateUserRequest.company:type_name -> service.Company
	52, // 27: service.CreateUserRequest.donations:type_name -> service.Donations
	50, // 28: service.CreateUserResponse.card:type_name -> service.Card
	48, // 29: service.CreateUserResponse.company:type_name -> service.Company
	52, // 30: service.CreateUserResponse.donations:type_name -> service.Donations
	53, // 31: service.DatabaseService.CreateUser:input_type -> service.CreateUserRequest
	0,  // 32: service.DatabaseService.Users:input_type -> service.Empty
	55, // 33: service.DatabaseService.IsRole:input_type -> service.IsRoleRequest
	46, // 34: service.DatabaseService.ComparePassword:input_type -> service.ComparePasswordRequest
	44, // 35: service.DatabaseService.UserIsExists:input_type -> service.UserIsExistsRequest
	39, // 36: service.DatabaseService.FindUserById:input_type -> service.FindUserByIdRequest
	42, // 37: service.DatabaseService.FindUserByEmail:input_type -> service.FindUserByEmailRequest
	38, // 38: service.DatabaseService.FindUserByPhone:input_type -> service.FindUserByPhoneRequest
	36, // 39: service.DatabaseService.ChangeUserType:input_type -> service.ChangeUserTypeRequest
	39, // 40: service.DatabaseService.FindUserCompany:input_type -> service.FindUserByIdRequest
	40, // 41: service.DatabaseService.FindUserDonations:input_type -> service.FindUserDonationsRequest
	34, // 42: service.DatabaseService.FindUserCard:input_type -> service.FindUserCardRequest
	2,  // 43: service.DatabaseService.AddCardToUser:input_type -> service.AddCardToUserRequest
	32, // 44: service.DatabaseService.DeleteUserByModel:input_type -> service.DeleteUserByModelRequest
	33, // 45: service.DatabaseService.DeleteUserById:input_type -> service.DeleteUserByIdRequest
	31, // 46: service.DatabaseService.UpdateUser:input_type -> service.UpdateUserRequest
	0,  // 47: service.DatabaseService.Companies:input_type -> service.Empty
	29, // 48: service.DatabaseService.CreateCompany:input_type -> service.CreateCompanyRequest
	27, // 49: service.DatabaseService.FindCompanyById:input_type -> service.FindCompanyByIdRequest
	28, // 50: service.DatabaseService.FindCompanyByPhone:input_type -> service.FindCompanyByIdPhoneRequest
	26, // 51: service.DatabaseService.FindCompanyCard:input_type -> service.FindCompanyCardRequest
	24, // 52: service.DatabaseService.DeleteCompanyByModel:input_type -> service.DeleteCompanyByModelRequest
	25, // 53: service.DatabaseService.DeleteCompanyById:input_type -> service.DeleteCompanyByIdRequest
	23, // 54: service.DatabaseService.UpdateCompany:input_type -> service.UpdateCompanyRequest
	0,  // 55: service.DatabaseService.Cards:input_type -> service.Empty
	21, // 56: service.DatabaseService.CreateCard:input_type -> service.CreateCardRequest
	20, // 57: service.DatabaseService.FindCardById:input_type -> service.FindCardByIdRequest
	50, // 58: service.DatabaseService.DeleteCardByModel:input_type -> service.Card
	19, // 59: service.DatabaseService.DeleteCardById:input_type -> service.DeleteCardByIdRequest
	50, // 60: service.DatabaseService.UpdateCard:input_type -> service.Card
	0,  // 61: service.DatabaseService.CardsCompanies:input_type -> service.Empty
	17, // 62: service.DatabaseService.CreateCardCompany:input_type -> service.CreateCardCompanyRequest
	16, // 63: service.DatabaseService.FindCardCompanyByID:input_type -> service.FindCardCompanyByIDRequest
	49, // 64: service.DatabaseService.DeleteCardCompanyByModel:input_type -> service.CardCompany
	15, // 65: service.DatabaseService.DeleteCardCompanyById:input_type -> service.DeleteCardCompanyByIdRequest
	49, // 66: service.DatabaseService.UpdateCardCompany:input_type -> service.CardCompany
	0,  // 67: service.DatabaseService.Donations:input_type -> service.Empty
	13, // 68: service.DatabaseService.CreateDonations:input_type -> service.CreateDonationsRequest
	12, // 69: service.DatabaseService.FindDonationWards:input_type -> service.FindDonationWardsRequest
	10, // 70: service.DatabaseService.FindDonationById:input_type -> service.FindDonationByIdRequest
	13, // 71: service.DatabaseService.DeleteDonationByModel:input_type -> service.CreateDonationsRequest
	9,  // 72: service.DatabaseService.DeleteDonationById:input_type -> service.DeleteDonationByIdRequest
	13, // 73: service.DatabaseService.UpdateDonation:input_type -> service.CreateDonationsRequest
	0,  // 74: service.DatabaseService.Wards:input_type -> service.Empty
	7,  // 75: service.DatabaseService.CreateWard:input_type -> service.CreateWardRequest
	6,  // 76: service.DatabaseService.FindWardById:input_type -> service.FindWardByIdRequest
	51, // 77: service.DatabaseService.DeleteWardByModel:input_type -> service.Ward
	5,  // 78: service.DatabaseService.DeleteWardById:input_type -> service.DeleteWardByIdRequest
	51, // 79: service.DatabaseService.UpdateWard:input_type -> service.Ward
	54, // 80: service.DatabaseService.CreateUser:output_type -> service.CreateUserResponse
	43, // 81: service.DatabaseService.Users:output_type -> service.UsersResponse
	56, // 82: service.DatabaseService.IsRole:output_type -> service.IsRoleResponse
	47, // 83: service.DatabaseService.ComparePassword:output_type -> service.ComparePasswordResponse
	45, // 84: service.DatabaseService.UserIsExists:output_type -> service.UserIsExistsResponse
	54, // 85: service.DatabaseService.FindUserById:output_type -> service.CreateUserResponse
	54, // 86: service.DatabaseService.FindUserByEmail:output_type -> service.CreateUserResponse
	54, // 87: service.DatabaseService.FindUserByPhone:output_type -> service.CreateUserResponse
	37, // 88: service.DatabaseService.ChangeUserType:output_type -> service.ChangeUserTypeResponse
	48, // 89: service.DatabaseService.FindUserCompany:output_type -> service.Company
	41, // 90: service.DatabaseService.FindUserDonations:output_type -> service.FindUserDonationsResponse
	35, // 91: service.DatabaseService.FindUserCard:output_type -> service.FindUserCardResponse
	3,  // 92: service.DatabaseService.AddCardToUser:output_type -> service.AddCardToUserResponse
	1,  // 93: service.DatabaseService.DeleteUserByModel:output_type -> service.HTTPCodes
	1,  // 94: service.DatabaseService.DeleteUserById:output_type -> service.HTTPCodes
	54, // 95: service.DatabaseService.UpdateUser:output_type -> service.CreateUserResponse
	30, // 96: service.DatabaseService.Companies:output_type -> service.CompaniesResponse
	48, // 97: service.DatabaseService.CreateCompany:output_type -> service.Company
	48, // 98: service.DatabaseService.FindCompanyById:output_type -> service.Company
	48, // 99: service.DatabaseService.FindCompanyByPhone:output_type -> service.Company
	49, // 100: service.DatabaseService.FindCompanyCard:output_type -> service.CardCompany
	1,  // 101: service.DatabaseService.DeleteCompanyByModel:output_type -> service.HTTPCodes
	1,  // 102: service.DatabaseService.DeleteCompanyById:output_type -> service.HTTPCodes
	1,  // 103: service.DatabaseService.UpdateCompany:output_type -> service.HTTPCodes
	22, // 104: service.DatabaseService.Cards:output_type -> service.CardsResponse
	50, // 105: service.DatabaseService.CreateCard:output_type -> service.Card
	50, // 106: service.DatabaseService.FindCardById:output_type -> service.Card
	1,  // 107: service.DatabaseService.DeleteCardByModel:output_type -> service.HTTPCodes
	1,  // 108: service.DatabaseService.DeleteCardById:output_type -> service.HTTPCodes
	50, // 109: service.DatabaseService.UpdateCard:output_type -> service.Card
	18, // 110: service.DatabaseService.CardsCompanies:output_type -> service.CardsCompaniesResponse
	49, // 111: service.DatabaseService.CreateCardCompany:output_type -> service.CardCompany
	49, // 112: service.DatabaseService.FindCardCompanyByID:output_type -> service.CardCompany
	1,  // 113: service.DatabaseService.DeleteCardCompanyByModel:output_type -> service.HTTPCodes
	1,  // 114: service.DatabaseService.DeleteCardCompanyById:output_type -> service.HTTPCodes
	49, // 115: service.DatabaseService.UpdateCardCompany:output_type -> service.CardCompany
	14, // 116: service.DatabaseService.Donations:output_type -> service.DonationsResponse
	4,  // 117: service.DatabaseService.CreateDonations:output_type -> service.CreateDonationsResponse
	11, // 118: service.DatabaseService.FindDonationWards:output_type -> service.FindDonationWardsResponse
	4,  // 119: service.DatabaseService.FindDonationById:output_type -> service.CreateDonationsResponse
	1,  // 120: service.DatabaseService.DeleteDonationByModel:output_type -> service.HTTPCodes
	1,  // 121: service.DatabaseService.DeleteDonationById:output_type -> service.HTTPCodes
	4,  // 122: service.DatabaseService.UpdateDonation:output_type -> service.CreateDonationsResponse
	8,  // 123: service.DatabaseService.Wards:output_type -> service.WardsResponse
	51, // 124: service.DatabaseService.CreateWard:output_type -> service.Ward
	51, // 125: service.DatabaseService.FindWardById:output_type -> service.Ward
	1,  // 126: service.DatabaseService.DeleteWardByModel:output_type -> service.HTTPCodes
	1,  // 127: service.DatabaseService.DeleteWardById:output_type -> service.HTTPCodes
	51, // 128: service.DatabaseService.UpdateWard:output_type -> service.Ward
	80, // [80:129] is the sub-list for method output_type
	31, // [31:80] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_DatabaseService_DatabaseService_proto_init() }
func file_DatabaseService_DatabaseService_proto_init() {
	if File_DatabaseService_DatabaseService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_DatabaseService_DatabaseService_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HTTPCodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddCardToUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AddCardToUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDonationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteWardByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FindWardByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CreateWardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*WardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDonationByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*FindDonationByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*FindDonationWardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*FindDonationWardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDonationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DonationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCardCompanyByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*FindCardCompanyByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCardCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CardsCompaniesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCardByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*FindCardByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCompanyByModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCompanyByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*FindCompanyCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*FindCompanyByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*FindCompanyByIdPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CompaniesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserByModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*ChangeUserTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*ChangeUserTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserByPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserDonationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserDonationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*UsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*UserIsExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*UserIsExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*ComparePasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*ComparePasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*CardCompany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*Ward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*Donations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*IsRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DatabaseService_DatabaseService_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*IsRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DatabaseService_DatabaseService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_DatabaseService_DatabaseService_proto_goTypes,
		DependencyIndexes: file_DatabaseService_DatabaseService_proto_depIdxs,
		MessageInfos:      file_DatabaseService_DatabaseService_proto_msgTypes,
	}.Build()
	File_DatabaseService_DatabaseService_proto = out.File
	file_DatabaseService_DatabaseService_proto_rawDesc = nil
	file_DatabaseService_DatabaseService_proto_goTypes = nil
	file_DatabaseService_DatabaseService_proto_depIdxs = nil
}
